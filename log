
    internal class StaticFile : IFileInfo
    {
        /// <summary>
        /// object reference
        /// </summary>
        private readonly FileInfo _fileInfo;

        /// <summary>
        /// check and see if exists
        /// </summary>
        public bool Exists => _fileInfo.Exists;

        /// <summary>
        /// Get length
        /// </summary>
        public long Length => _fileInfo.Length;

        /// <summary>
        /// Get physical path
        /// </summary>
        public string PhysicalPath => _fileInfo.FullName;

        /// <summary>
        /// Get name
        /// </summary>
        public string Name => _fileInfo.Name;

        /// <summary>
        /// Get last modifed date
        /// </summary>
        public DateTimeOffset LastModified => _fileInfo.LastWriteTime;

        /// <summary>
        /// Check if it is a directory
        /// </summary>
        public bool IsDirectory => Directory.Exists(_fileInfo.FullName);

        /// <summary>
        /// Create a stream
        /// </summary>
        /// <returns></returns>
        public Stream CreateReadStream()
        {
            return File.OpenRead(_fileInfo.FullName);
        }

        public StaticFile(FileInfo file)
        {
            if (file == null)
                throw new ArgumentNullException("file");

            _fileInfo = file;
        }
    }
}

